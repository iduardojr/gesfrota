<?php

namespace DoctrineProxies\__CG__\Gesfrota\Model\Domain;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ImportTransactionFix extends \Gesfrota\Model\Domain\ImportTransactionFix implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'transactionParent', 'transactionFixtype', 'supplierType', 'itemType', 'transactionId', 'transactionDate', 'transactionAgency', 'transactionCostCenter', 'transactionVehicle', 'transactionImport', 'vehiclePlate', 'vehicleDescription', 'supplierName', 'supplierNif', 'supplierCity', 'supplierUF', 'itemDescription', 'itemQuantity', 'itemPrice', 'itemTotal'];
        }

        return ['__isInitialized__', 'transactionParent', 'transactionFixtype', 'supplierType', 'itemType', 'transactionId', 'transactionDate', 'transactionAgency', 'transactionCostCenter', 'transactionVehicle', 'transactionImport', 'vehiclePlate', 'vehicleDescription', 'supplierName', 'supplierNif', 'supplierCity', 'supplierUF', 'itemDescription', 'itemQuantity', 'itemPrice', 'itemTotal'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ImportTransactionFix $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTransactionParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionParent', []);

        return parent::getTransactionParent();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionFixtype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionFixtype', []);

        return parent::getTransactionFixtype();
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplierType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplierType', []);

        return parent::getSupplierType();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemType', []);

        return parent::getItemType();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionVehicle(\Gesfrota\Model\Domain\Vehicle $vehicle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionVehicle', [$vehicle]);

        return parent::setTransactionVehicle($vehicle);
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionParent(\Gesfrota\Model\Domain\ImportTransactionFix $parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionParent', [$parent]);

        return parent::setTransactionParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionFixtype($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionFixtype', [$type]);

        return parent::setTransactionFixtype($type);
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplierType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplierType', [$type]);

        return parent::setSupplierType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function setItemType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemType', [$type]);

        return parent::setItemType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemPriceLabor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemPriceLabor', []);

        return parent::getItemPriceLabor();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemPriceParts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemPriceParts', []);

        return parent::getItemPriceParts();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemTotal', []);

        return parent::getItemTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function toTransform(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toTransform', [$data]);

        return parent::toTransform($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', []);

        return parent::getData();
    }

    /**
     * {@inheritDoc}
     */
    public function isModelSummarized()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isModelSummarized', []);

        return parent::isModelSummarized();
    }

    /**
     * {@inheritDoc}
     */
    public function isModelDiscriminated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isModelDiscriminated', []);

        return parent::isModelDiscriminated();
    }

    /**
     * {@inheritDoc}
     */
    public function isModelDetailed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isModelDetailed', []);

        return parent::isModelDetailed();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getTransactionId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionId', []);

        return parent::getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionDate', []);

        return parent::getTransactionDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionAgency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionAgency', []);

        return parent::getTransactionAgency();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionCostCenter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionCostCenter', []);

        return parent::getTransactionCostCenter();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionVehicle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionVehicle', []);

        return parent::getTransactionVehicle();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionImport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionImport', []);

        return parent::getTransactionImport();
    }

    /**
     * {@inheritDoc}
     */
    public function getVehiclePlate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehiclePlate', []);

        return parent::getVehiclePlate();
    }

    /**
     * {@inheritDoc}
     */
    public function getVehicleDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehicleDescription', []);

        return parent::getVehicleDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplierName', []);

        return parent::getSupplierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplierNif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplierNif', []);

        return parent::getSupplierNif();
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplierPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplierPlace', []);

        return parent::getSupplierPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemDescription', []);

        return parent::getItemDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemQuantity', []);

        return parent::getItemQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemPrice', []);

        return parent::getItemPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionId', [$id]);

        return parent::setTransactionId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionDate(\DateTime $date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionDate', [$date]);

        return parent::setTransactionDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionAgency(\Gesfrota\Model\Domain\Agency $agency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionAgency', [$agency]);

        return parent::setTransactionAgency($agency);
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionCostCenter($costCenter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionCostCenter', [$costCenter]);

        return parent::setTransactionCostCenter($costCenter);
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionImport(\Gesfrota\Model\Domain\ImportTransaction $import)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionImport', [$import]);

        return parent::setTransactionImport($import);
    }

    /**
     * {@inheritDoc}
     */
    public function setVehiclePlate($plate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVehiclePlate', [$plate]);

        return parent::setVehiclePlate($plate);
    }

    /**
     * {@inheritDoc}
     */
    public function setVehicleDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVehicleDescription', [$description]);

        return parent::setVehicleDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplierName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplierName', [$name]);

        return parent::setSupplierName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplierNif($nif)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplierNif', [$nif]);

        return parent::setSupplierNif($nif);
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplierPlace($city, $uf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplierPlace', [$city, $uf]);

        return parent::setSupplierPlace($city, $uf);
    }

    /**
     * {@inheritDoc}
     */
    public function setItemDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemDescription', [$description]);

        return parent::setItemDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setItemQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemQuantity', [$quantity]);

        return parent::setItemQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function setItemPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemPrice', [$price]);

        return parent::setItemPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function setItemTotal($total)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemTotal', [$total]);

        return parent::setItemTotal($total);
    }

}
